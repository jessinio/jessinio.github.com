---layout: posttitle: linearlayoutcategories: android---linearlayout类的layout_gravity属性：本元素在父元素分配的空间内的重力方向!http://blog.jessinio.info/images/linearlayout-layout_gravity-top.png!!http://blog.jessinio.info/images/linearlayout-layout_gravity-center.png!linearlayout类的gravity属性：!http://blog.jessinio.info/images/linearlayout-gravity-top.png!!http://blog.jessinio.info/images/linearlayout-gravity-center.png!子元素可以获得的属性： layout_weight * 对orientation属性方向的剩余空间使用比重 就下面的xml描述{% highlight xml %}<?xml version="1.0" encoding="utf-8"?><LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"	android:layout_height="200dp"	android:layout_width="200dp"	android:background="#AABBCC"	android:orientation= "horizontal"	android:gravity="center"	android:layout_gravity= "center" >	 	<TextView android:text="ONE"		android:background="#aa0000"		android:layout_height="wrap_content"		android:layout_width="wrap_content"		android:layout_margin="1dp"/>	                                               	<TextView android:text="TWO"		android:background="#aa0000"		android:layout_height="wrap_content"		android:layout_width="wrap_content"		android:layout_margin="1dp"/></LinearLayout>{% endhighlight %}显示结果如：!http://blog.jessinio.info/images/linearlayout-without-layout_weight.png!linearlayout还剩余不少空间， 为了使用剩余的空间，在子元素上使用layout_weight属性：{% highlight xml %} 	<TextView android:text="ONE"		android:background="#aa0000"		android:layout_height="wrap_content"		android:layout_width="wrap_content"		android:layout_weight="1"		android:layout_margin="1dp"/>{% endhighlight %}结果如下：!http://blog.jessinio.info/images/linearlayout-layout_weight.png!# 只要有子元素使用了layout_weight属性后，剩余的空间必须100%被分配。# 子元素使用了layout_weight属性后，此子元素的layout_width或者layout_height将不起作用（取决于linearlayout的orientation方向）